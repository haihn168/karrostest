<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="15671" started-at="2019-11-17T15:56:42Z" finished-at="2019-11-17T15:56:58Z">
    <groups>
    </groups>
    <test name="UITest" duration-ms="13895" started-at="2019-11-17T15:56:42Z" finished-at="2019-11-17T15:56:56Z">
      <class name="UITest.RequestPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:UITest.RequestPageTest@2344fc66]" name="beforeTest" is-config="true" duration-ms="10" started-at="2019-11-17T15:56:42Z" finished-at="2019-11-17T15:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:UITest.RequestPageTest@2344fc66]" name="beforeMethod" is-config="true" duration-ms="5746" started-at="2019-11-17T15:56:42Z" finished-at="2019-11-17T15:56:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="HomePageLoadCorrectly()[pri:0, instance:UITest.RequestPageTest@2344fc66]" name="HomePageLoadCorrectly" duration-ms="7149" started-at="2019-11-17T15:56:48Z" finished-at="2019-11-17T15:56:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePageLoadCorrectly -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:UITest.RequestPageTest@2344fc66]" name="afterMethod" is-config="true" duration-ms="976" started-at="2019-11-17T15:56:55Z" finished-at="2019-11-17T15:56:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- UITest.RequestPageTest -->
    </test> <!-- UITest -->
    <test name="APITest" duration-ms="1765" started-at="2019-11-17T15:56:56Z" finished-at="2019-11-17T15:56:58Z">
      <class name="APITest.TypiCodeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:APITest.TypiCodeTest@4520ebad]" name="setup" is-config="true" duration-ms="424" started-at="2019-11-17T15:56:56Z" finished-at="2019-11-17T15:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TypiCodeTest()[pri:0, instance:APITest.TypiCodeTest@4520ebad]" name="TypiCodeTest" duration-ms="1336" started-at="2019-11-17T15:56:57Z" finished-at="2019-11-17T15:56:58Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Schema to use cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at APITest.TypiCodeTest.TypiCodeTest(TypiCodeTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TypiCodeTest -->
      </class> <!-- APITest.TypiCodeTest -->
    </test> <!-- APITest -->
  </suite> <!-- Suite1 -->
</testng-results>
